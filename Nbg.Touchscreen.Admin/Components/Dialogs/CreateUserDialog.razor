@using MudBlazor
@using Microsoft.AspNetCore.Components
@using Microsoft.EntityFrameworkCore
@using Nbg.Touchscreen.Admin.Data

<MudDialog>
    <DialogContent>
        <MudForm @ref="_form" OnValidSubmit="CreateUser">
            <MudTextField @bind-Value="_email" Label="Email" Required="true" />
            <MudTextField @bind-Value="_displayName" Label="Display name" />
            <MudTextField @bind-Value="_password" Label="Password" InputType="InputType.Password" Required="true" />

            <!-- Αν είσαι Admin δείξε επιλογή ρόλου, αλλιώς φτιάχνεις Viewer -->
            @* <AuthorizeView Roles="AdminUser">
                <Authorized>
                    <MudSelect T="string" Label="Role" @bind-Value="_role" Required="true">
                        <MudSelectItem Value="AdminUser">Admin</MudSelectItem>
                        <MudSelectItem Value="Editor">Editor</MudSelectItem>
                        <MudSelectItem Value="Viewer">Viewer</MudSelectItem>
                    </MudSelect>
                </Authorized>
                <NotAuthorized>
                    <MudAlert Severity="Severity.Info" Dense="true" Class="mt-2">
                        New users are created as <b>Viewer</b>.
                    </MudAlert>
                </NotAuthorized>
            </AuthorizeView> *@

            <MudText Color="Color.Error">@_error</MudText>
            <MudButton Type="Submit" Class="mt-4">Create</MudButton>
        </MudForm>
    </DialogContent>
</MudDialog>

@code {
    [Inject] public AppDbContext Db { get; set; } = default!;
    [Inject] public ISnackbar Snackbar { get; set; } = default!;

    private MudForm? _form;
    private string _email = "";
    private string _displayName = "";
    private string _password = "";
    private string _role = "Viewer";   // default
    private string? _error;

    private async Task CreateUser()
    {
        var exists = await Db.Users.AnyAsync(u => u.Email == _email);
        if (exists)
        {
            _error = "Email already exists.";
            return;
        }

        var user = new User
        {
            Name = string.IsNullOrWhiteSpace(_displayName) ? _email : _displayName,
            Email = _email,
            Password = _password, // για αρχή απλό — μετά το κάνουμε hash
            Role = _role,
            IsActive = true
        };

        Db.Users.Add(user);
        await Db.SaveChangesAsync();

        Snackbar.Add($"User '{_email}' created as '{_role}'.", Severity.Success);

        _email = _displayName = _password = string.Empty;
        _role = "Viewer";
        _error = null;
        if (_form is not null)
            await _form.ResetAsync();
    }
}

