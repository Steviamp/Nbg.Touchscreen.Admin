@page "/login"
@rendermode InteractiveServer
@inject NavigationManager Nav

<MudContainer MaxWidth="MaxWidth.ExtraSmall" Class="mt-10">
    <MudPaper Class="pa-6">
        <div style="text-align:center; margin-bottom: 20px;">
            <MudImage Src="images/MellonLogo.png"
                      Alt="Company Logo"
                      Style="max-width: 160px;" />
        </div>
        <MudText Typo="Typo.h5" GutterBottom>Sign in</MudText>

        <form method="post" action="/auth/login">
            <AntiforgeryToken />
            <input type="hidden" name="ReturnUrl" value="@returnUrl" />

            <MudTextField 
                @bind-Value="_email" 
                Label="Email" 
                Name="Email" 
                Required="true" />
            <MudTextField 
                @bind-Value="_password" 
                Label="Password" 
                Name="Password" 
                Required="true"
                InputType="InputType.Password" />

            <MudButton Class="mt-4" Variant="Variant.Filled" ButtonType="ButtonType.Submit">
                LOGIN
            </MudButton>
        </form>

        @if (!string.IsNullOrEmpty(_error))
        {
            <MudAlert Severity="Severity.Error" Class="mt-3">@_error</MudAlert>
        }
    </MudPaper>
</MudContainer>

@code {
    private string _email = "";
    private string _password = "";
    private string? _error;
    private string returnUrl = "/";

    protected override void OnInitialized()
    {
        var uri = new Uri(Nav.Uri);
        var qs = System.Web.HttpUtility.ParseQueryString(uri.Query);
        returnUrl = string.IsNullOrWhiteSpace(qs["ReturnUrl"]) ? "/" : qs["ReturnUrl"]!;
    }
}